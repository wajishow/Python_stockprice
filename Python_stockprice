# coding: UTF-8
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from bs4 import BeautifulSoup
import requests
import time
import slackweb

# 例外発生通知用のslackのurl
SLACKURL_ex = 'https://hooks.slack.com/services/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'

# main処理
def main():

    scope = ['https://spreadsheets.google.com/feeds',
            'https://www.googleapis.com/auth/drive']

    #jsonファイルを指定
    credentials = ServiceAccountCredentials.from_json_keyfile_name('stockrprice-0ca98fe01516.json', scope)

    # 認証
    gc = gspread.authorize(credentials)

    # 対象銘柄コード読み取り
    code_list = readSpreadsheet(gc)


    name_list = []

    for i in range(1, len(code_list)):

        # スクレイピング対象URL
        URL = 'https://minkabu.jp/stock/'+ code_list[i] + '/ipo'

        # スクレイピング実行
        try:
            #対象URLにリクエスト
            req = requests.get(URL)
            time.sleep(2)

            # 文字コードをUTF-8に変換し、html取得
            soup = BeautifulSoup(req.text, 'html.parser')

            # tagとclassを指定して要素を取り出す
            #stock_price = soup.find('div', id='stockinfo_i1').find('span', class_='kabuka').text
            stock_price = soup.find('dd', "ly_col.tar.ly_colsize_3").text
            name_list.append(stock_price.replace('円',''))

            #company_name = soup.select('h2:contains("会社情報") ~ h3')
            #name_list.append(conpany_name.replace("<h3>", ""))
            # company_name = soup.find('div', class='topicpath').find('span', intemprop_='name').text


        except Exception as e:
            message = "[例外発生]stock-price\n"+"type:{0}".format(type(e))+"\n"+"args:{0}".format(e.args)
            slackweb.Slack(url = SLACKURL_ex).notify(text = message)
            break


    # スプレッドシートへ株価を書き込む
        target_sheet = gc.open('Python_stockprice').worksheet('stock')

        for i in range(0,len(name_list)):
        #対象のセルに値を書き込む(row, col, value)
            target_sheet.update_cell(i+2, 3, name_list[i])



def readSpreadsheet(gc):

    # 読み込むシートを指定
    target_sheet = gc.open('Python_stockprice').worksheet('stock')

    # 指定した列のセルの値を読み込む
    value_list = target_sheet.col_values(1)

    return value_list


#def writeSpreadsheet(gc, value_list):

    # 書き込み対象のシートを指定
    #target_sheet = gc.open('Python_stockprice').worksheet('stock')

    #for i in range(0,len(value_list)):
        #対象のセルに値を書き込む(row, col, value)
        #target_sheet.update_cell(i+2, 3, value_list[i])
#

if __name__ == '__main__':
    main()
